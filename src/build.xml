<?xml version="1.0" encoding="UTF-8"?>

<project name="Schoolib" default="main" basedir=".">
  <!-- Setto le variabili  -->
  <!-- il valore delle proprieta e accesibile tramite  ${} -->
  <property name="base.dir" value="."/>
  <property name="lib" value="lib"/>
  <property name="lib" location="lib"/> 
 
 <property name="src.dir" location="src" />
<property name="build.dir" location="bin" />
<property name="dist.dir" location="dist" />
<property name="docs.dir" location="docs" />
  <property name="deprecation" value="on" />
 <property name="verbose" value="no" />
  <property name="debug" value="on" />
	<property name="optimize" value="on" />
	<!-- Aggiunto  -->
  <property name="serverClass"   value="Server"/>
  <property name="clientClass"   value="Client"/>
 <!-- Aggiunto  -->
 
        <path id="build.classpath">
        <fileset dir="${build.dir}" includes="**/*.jar"/>
        </path>
		
     <target name = "init">
	<mkdir dir ="src/main/Images/"/>
     </target>
  <!-- jar del server -->
  <target name= "create db">
    <sql driver="org.postgresql.Driver"
	url="jdbc:postgresql://localhost:5432"
	classpath="postgresql-9.4.1211.jar"
	
    userid="postgres"
	password="postgres"
	autocommit="true">
	</sql>
	</target>
	
	<!--<jar destfile ="build/classes/connections/Server.jar" basedir="build/classes"/>  -->
	
       
 <!-- Elimino l'esistente  build, docs and dist directory-->
 
      <target name="clean">    
      <delete dir="${build.dir}" />
      <delete dir="${docs.dir}" />  
      <delete dir="${dist.dir}" />
      </target>
 <!-- Creazione del   build, docs and dist directory-->
  
     <target name="makedir">
     <mkdir dir="${build.dir}" />
     <mkdir dir="${docs.dir}" />
     <mkdir dir="${dist.dir}" />
     </target>
<!-- CLIENT Compiles the java code (including the usage of library for JUni)  -->

  <target name="compile" depends="clean, makedir, init">
   <path id="runPath">
   <fileset dir="${lib}" includes="*.jar" />
    </path>
  
  <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" classpathref="build.classpath" deprecation= "${deprecation}" debug="${debug}" optimize ="${optimize}" verbose ="${verbose}" > 
    <compilerarg value ="-Xlint:unchecked"/>
      <classpath>
          <pathelement path="lib/javax.mail.jar"/>
          <pathelement path="lib/postgresql-9.4.1211.jar"/>               <!-- metto librerie esterne -->
         </classpath>
 </javac>
 </target>
 <!-- Creates Javadoc -->
  
<target name="docs" depends="compile">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
  
					<!-- Define which files / directory should get included, we include all -->
				<classpath>
							
							<pathelement path="lib/javax.mail.jar"/>
							<pathelement path="lib/postgresql-9.42.0.0.jre.7jar"/>
		
				</classpath>
    
	         		
 
   </javadoc>
 
 </target>

 <target name="main" depends="compile, jar, run">   
 <description>Main target</description>  
</target>
   <!--Creates the deployable jar file  -->
  <!-- <target name="jar" depends="run"> -->
   <!--<javac srcdir="src" destdir="build/classes" includeantruntime="false"> -->
   
    <target name="jar"> 
	    <mkdir dir ="build/classes"/>
		<jar destfile ="build/classes/connections/Client.jar" basedir="build/classes">
		<!--<jar destfile ="build/classes/connections/Server.jar" basedir="build/classes" -->
		                        <manifest>
								<attribute name="Main-Class" value="Client" />
								</manifest>
								            
											<classpath>
												<path>	
												<zip destfile="${dist}/lib.zip">
											<zipfileset dir="lib" />
											<zipgroupfileset dir="." />
												</zip>													<!--
																								<jar destFile="library.jar">
																								<zipgroupfileset dir="lib" includes="**/*.jar" />
																								</jar>
																						                -->											
													</path> 
											</classpath>
											
    
		</jar>
   </target>  
 <!-- run -->
 <target  name="run" depends="jar" description="Esecuzione">
       <java jar="build/jar/Client.jar" fork ="true"/>
	 <!--
	  <classpath>
	   <pathelement location="${dist.dir}/jar/Client.jar"/>
	   </classpath>
	   -->
</target>	   
     
	 
	  </project>
	  
	  <!-- prova lib 2<fileset dir="${lib.dir}">
					 <include name="**/*.jar" />
					</fileset> -->
	  
	<!-- prova lib 1
								            <fileset dir="${lib}">
                                            <include name="**/*.jar"/>
											</fileset>
												-->  
	  
	   <!-- non servono 
		 <pathelement path="lib/json-simple-1.1.1.jar"/>
            <pathelement path="lib/log4j-1.2.17.jar"/>
			  da eliminare 
			  <pathelement path="lib/josm-tested.jar"/> 
			-->
	  
	  
	  
	 					   <!-- non servono 
		 <pathelement path="lib/json-simple-1.1.1.jar"/>
            <pathelement path="lib/log4j-1.2.17.jar"/>
			  da eliminare 
			  <pathelement path="lib/josm-tested.jar"/> 
			-->
	   
 <!-- 
  <java classname="build/jar/Client.jar" fork="true">
				<classpath>
				<path refid="build.classpath" />
				<pathelement location="${dist.dir}/Client.jar" />
				</classpath>
      	 
   </java>
  </target>
       --> 


								
								
	<!--						
  <java classname="build/jar/Client.jar" fork="true">
				<classpath>
				<path refid="build.classpath" />
				<pathelement location="${dist.dir}/Client.jar" />
				</classpath>
      	 
   </java>
  </target>
       -->